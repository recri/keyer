if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest 2
    namespace import -force ::tcltest::*
}

package require dbus-tcl
dbus connect

test info-1.1 {simple info} {
    catch {dbus info version}
} 0

test info-1.2 {info on session bus} {
    catch {dbus info session version}
} 0

test info-1.3 {info on system bus} {
    catch {dbus info system version}
} 0

test info-1.4 {info on other bus} -body {
    dbus info foo version
} -returnCodes error -result {bad busId "foo"}

test info-1.5 {info without option} -body {
    dbus info
} -returnCodes error -result {wrong # args:\
should be "dbus info ?busId? option"}

test info-1.6 {info with too many options} -body {
    dbus info session local path
} -returnCodes error -result {wrong # args:\
should be "dbus info ?busId? option"}

test info-1.7 {info with bad option} -body {
    dbus info foo
} -returnCodes error -result {bad option "foo":\
must be machineid, local, name, path, pending, serverid, service, or version}

test info-2.1 {info version} -body {
    dbus info version
} -result {^\d+\.\d+\.\d+$} -match regexp

test info-2.2 {info machineid} -body {
    dbus info machineid
} -result {^[0-9a-f]{32}$} -match regexp

test info-2.3 {info local} {
    dbus info local
} /org/freedesktop/DBus/Local

test info-2.4 {info path} {
    dbus info path
} /org/freedesktop/DBus

test info-2.5 {info pending} {
    dbus info pending
} 0

test info-2.6 {info pending on system bus} -body {
    dbus info system pending
} -returnCodes error -result "Not connected"

test info-2.7 {info serverid} -body {
    dbus info serverid
} -result {^[0-9a-f]{32}$} -match regexp

test info-2.8 {info serverid on system bus} -body {
    dbus info system serverid
} -returnCodes error -result "Not connected"

test info-2.9 {info service} {
    dbus info service
} org.freedesktop.DBus

# cleanup
cleanupTests
return
