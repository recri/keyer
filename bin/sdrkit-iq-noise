#!/usr/bin/tclsh
# -*- mode: Tcl; tab-width: 8; -*-
#
# Copyright (C) 2011, 2012 by Roger E Critchlow Jr, Santa Fe, NM, USA.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
# 

#
# an sdrkit embeddable IQ coherent noise generator
#

#
# find the script file
# and add the lib directory to the automatic package search path
set script [expr { ! [catch {file readlink [info script]} link] ? $link : [info script]}]
lappend auto_path [file join [file dirname $script] .. lib]

#
# require Tk for graphical UI and communications
# sdrtcl::noise to implement the noise generator
#
package require Tk
package require sdrtcl::iq-noise

#
# on the fly implementation of control interface
#
package require snit

namespace eval sdrkit {}

snit::type sdrkit::iq-noise {    
    option -server -default default -readonly true
    option -name -default sdr-iq-noise -readonly true
    option -control -default {} -readonly true
    option -minsizes -default {100 200} -readonly true
    option -weights -default {1 3} -readonly true
    option -enable -default 1 -configuremethod Configure
    option -activate -default 1 -configuremethod Configure

    option -level -default -30.0 -configuremethod Configure
    option -min-level -default -160.0 -configuremethod Configure
    option -max-level -default 0.0 -configuremethod Configure

    variable data -array {
	level-label {}
    }

    constructor {args} {
	$self configure {*}$args

	tk appname $options(-name)
	wm title . $options(-name)
	
	sdrtcl::iq-noise $options(-name) -server $options(-server) -level $options(-level)

	if {$options(-control) ne {}} {
	    set options(-enable) 0
	    set options(-activate) 0
	    if {[$options(-name) is-active]} { $options(-name) deactivate }
	} else {
	    set options(-enable) 1
	    set options(-activate) 1
	    if { ! [$options(-name) is-active]} { $options(-name) activate }
	}

	ttk::label .level-l -textvar [myvar data(level-label)] -width 10 -anchor e
	ttk::scale .level-s -from $options(-max-level) -to $options(-min-level) -command [mymethod Set level] -variable [myvar options(-level)]
	$self Set level $options(-level)
	grid .level-l .level-s -sticky ew

	set col -1
	foreach ms $options(-minsizes) wt $options(-weights) {
	    grid columnconfigure . [incr col] -minsize $ms -weight $wt
	}
    }
    destructor {
	catch {$options(-name) deactivate}
	catch {rename $options(-name) {}}
    }
    method Configure {opt val} {
	set options($opt) $val
	switch -- $opt {
	    -activate { $options(-name) [expr {$val?{activate}:{deactivate}}] }
	    default {}
	}
    }
    method {Set level} {v} {
	$options(-name) configure -level $v
	set data(level-label) [format {%.1f dBFS} $v]
    }
}

sdrkit::iq-noise ::sdrkit {*}$argv
