#!/usr/bin/tclsh8.6
# -*- mode: Tcl; tab-width: 8; -*-

#
# dssdr talks to whatever tuner is connected and makes
# a useful interface.
#
#
set script [expr { ! [catch {file readlink [info script]} link] ? $link : [info script]}]
lappend auto_path [file join [file dirname $script] .. lib]

package require Tk

package require sdrtk::dial
package require sdrtk::readout-freq

array set data {
    frequency 7050000
    frequency-units MHz
    frequency-steps  1000
    tuner qrp2000

}

proc dial-turn {w steps} {
    set f  [.f cget -value]
    .f configure -value [expr {$f+$steps*$::data(frequency-steps)}]
    .d Rotate $steps
}
proc dial-press {w args} { puts "dial-press $w $args" }
proc dial-release {w args} { puts "dial-release $w $args" }

proc set-tuner {args} {
    puts "set-tuner $args :: $::data(tuner) "
}

pack [ttk::frame .m] -fill x -expand true -side top
pack [ttk::menubutton .m.t -text Tuner -menu .m.t.m] -side right
menu .m.t.m -tearoff no
foreach tuner {qrp2000 ensemble-rx ensemble-rxtx dds-60 ad9850 si570} {
    .m.t.m add radiobutton -label $tuner -variable data(tuner) -value $tuner -command [list set-tuner]
}

pack [sdrtk::readout-freq .f -value $data(frequency) -variable data(frequency) -units $data(frequency-units) -text Frequency] -fill x -expand true -side top
pack [sdrtk::dial .d -cpr 100] -fill both -expand true -side top

bind .d <<DialCW>> [list dial-turn .d 1]
bind .d <<DialCCW>> [list dial-turn .d -1]
bind .d <<DialPress>> [list dial-press .d]
bind .d <<DialRelease>> [list dial-release .d]
