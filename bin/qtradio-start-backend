#!/bin/bash
##
## this is the script I used to start the qtradio softrock and dspserver
## backend programs and keep logs of what they produce
##
## lately I have tacked on an experimental jack backend for an alternative
## remote SDR radio implemented with sdrkit.
##
## and now I'm trying to get the IQ order straight, as it swaps between
## radios and sound cards.
##
## RX   startup freq = 114.294666
## RXTX startup freq = 114.359895
##

export DISPLAY=:0
OBDEV=hw:0			# 0 for onboard
OBRATE=96000			# onboard rate
HWDEV=hw:1			# 1 for sdr-widget, x-fi usb, etc
HWRATE=96000			# hardware rate
HWBUFFER=1024			# hardware buffer
SHORTS=				# do not configure for 16 bits
SI570="--si570"
IQ="--iq"			# reversed on x-fi usb
LOG=~/Projects/keyer/logs/`date --rfc-3339=seconds | sed -e 's/ /-/'`
ADAPTER=0
XFI=0
DEBUG=0
# figure out which radio
case `usbsoftrock status | grep '^Xtall Freq' | sed -e 's/.*: *//'` in
    114.285000) RADIO=RX;;	# new rom, different report
    114.294666) RADIO=RX;;
    114.359895) RADIO=RXTX;;
    *) echo "unknown radio";;
esac
# figure out which sound card
SCARD=`cat /proc/asound/card1/id`
# set defaults for radio soundcard combo
case "$RADIO"-"$SCARD" in
    RX-Creative)
	echo "detected Ensemble RX with Creative, setting --qi"
	IQ="--qi";;
    RX-IOx)
	echo "detected Ensemble RX with IOx, setting --qi"
	IQ="--qi";;
    RX-Dongle)
	#echo "detected Ensemble RX with Syba dongle, force 16bits"
	#SHORTS=-S
	echo "detected Ensemble RX with Syba dongle, rate -> 48000"
	IQ="--qi"
	HWRATE=48000
	OBRATE=48000;;
    RX-system)
	echo "detected Ensemble RX with Griffin iMic"
	IQ="--qi"
	HWRATE=48000
	OBRATE=48000;;
esac

for f in $*; do
    case $f in
	--qi) IQ="--qi";;
	--iq) IQ="--iq";;
	--xfi) XFI=1; ADAPTER=0;;
	--16k) HWRATE=16000;;
	--48k) HWRATE=48000;;
	--96k) HWRATE=96000;;
	--192k) HWRATE=192000;;
	--hw:0) HWDEV=hw:0;;
	--hw:1) HWDEV=hw:1;;
	--hw:2) HWDEV=hw:2;;
	--hw:3) HWDEV=hw:3;;
	--si570) SI570=--si570;;
	--noadapter) ADAPTER=no;;
	--debug) DEBUG=1;;
	*)
	    echo "unknown argument: $f"
	    exit 1
	    ;;
    esac
done

##
## plain old qtradio backend
##
IHWDEV=$HWDEV
OHWDEV=$HWDEV
if [ $XFI -eq 1 ]; then
    OHWDEV=$OBDEV
fi

echo "jackd -T -s -dalsa -C$IHWDEV -P$OHWDEV -r$HWRATE -p$HWBUFFER $SHORTS -i2 -o2 -n3 -X raw"
jackd -T -s -dalsa -C$IHWDEV -P$OHWDEV -r$HWRATE -p$HWBUFFER $SHORTS -i2 -o2 -n3 -X raw > $LOG-jackd.log 2>&1 &
JACKD_PID=$!
sleep 1
echo "softrock --jack $SI570 $IQ --samplerate $HWRATE"
softrock --jack $SI570 $IQ --samplerate $HWRATE > $LOG-softrock.log 2>&1 &
SOFTROCK_PID=$!

sleep 1
echo "dspserver --lo 10000"
dspserver --lo 10000 > $LOG-dspserver.log 2>&1 &
DSPSERVER_PID=$!

##
## default jackd server: started above
## audio adapter to alsa loopback ports
## the loopback ports are started by adding
## snd-aloop to /etc/modules, it will be
## started at boot time as long as its there
##
## actually, skip the tricky stuff, just connect to the onboard audio
##
if [ $ADAPTER -eq 1 ]; then
    sleep 1
    echo "jack_load audioadapter -i \"-D -C$OBDEV,0 -P$OBDEV,1 -q 0 -r $OBRATE\""
    jack_load audioadapter -i "-D -C$OBDEV,0 -P$OBDEV,1 -q 0 -r $OBRATE"
fi

##
## connect the debugger to the dspserver process
## requires "continue" to restart running
##
if [ $DEBUG -eq 1 ]; then
    sudo gdb ~/Sources/ghpsdr3-alex/trunk/src/dspserver/dspserver $DSPSERVER_PID
fi


##
## network manager to get midi controls
##
##sleep 1
##jack_load netmanager -i "-p 19000 --celt 64" # 64kbit celt decoding

##
## audio server: from loopback ports
## there is a downsampling step between
## the default jack server and the af jack server
##
##sleep 1
##jackd -n af -d alsa -r $LPRATE -D -C$LPDEV,1 -P$LPDEV,0 -i 2 -o 2 > $LOG-af.log 2>&1 &

##
## audio server netmanager backend
## so the downsampled stream can
## be remotely accessed.
## 
##sleep 1
##jack_load -s af netmanager -i "-p 19001 --celt 64" # 64kbit celt decoding

