#!/bin/bash
##
## this is the script I used to start the qtradio softrock and dspserver
## backend programs and keep logs of what they produce
##
## lately I have tacked on an experimental jack backend for an alternative
## remote SDR radio implemented with sdrkit.
##


export DISPLAY=:0
HWBUFFER=1024
HWRATE=192000
HWDEV=hw:1			# 1 for sdr-widget
LPRATE=48000
LPDEV=hw:2			# 2 for loopback
SHARE="--share"
SI570="--si570"
LOG=~/Projects/keyer/logs/`date --rfc-3339=date`

for f in $*; do
    case $f in
	--48k) HWRATE=48000;;
	--96k) HWRATE=96000;;
	--192k) HWRATE=192000;;
	--share) SHARE=--share;;
	--hw:0) HWDEV=hw:0;;
	--hw:1) HWDEV=hw:1;;
	--hw:2) HWDEV=hw:2;;
	--hw:3) HWDEV=hw:3;;
	--si570) SI570=--si570;;
	*)
	    echo "unknown argument: $f"
	    exit 1
	    ;;
    esac
done

jackd -T -s -dalsa -C$HWDEV -P$HWDEV -r$HWRATE -p$HWBUFFER -n3 > $LOG-jackd.log 2>&1 &
sleep 1
nohup softrock --jack $SI570 --iq --samplerate $HWRATE > $LOG-softrock.log 2>&1 &
sleep 1
nohup dspserver --lo 10000 $SHARE > $LOG-dspserver.log 2>&1 &
##
## audio server from loopback ports
## there is a downsampling step here
##
sleep 1
jackd -n af -d alsa -r $LPRATE -D -C$LPDEV,1 -P$LPDEV,0 -i 2 -o 2 > $LOG-af.log 2>&1 &
##
## audio server netmanager backend
## so the downsampled stream can
## be remotely accessed.  Only mono
## over a WiFi with jack-1.9.7, but
## the celt codec becomes available
## with jack-1.9.8
## 
sleep 1
jack_load -s af netmanager -i "--celt 64" # 64kbit celt decoding

##
## tagged on start jack network backend
## audio adapter to alsa loopback ports
## the loopback ports are started by adding
## snd-aloop to /etc/modules, it will be
## started at boot time as long as its there
##
sleep 1
jack_load audioadapter -i "-D -C$LPDEV,0 -P$LPDEV,1 -q 2"
