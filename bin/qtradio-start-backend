#!/bin/bash
##
## this is the script I used to start the qtradio softrock and dspserver
## backend programs and keep logs of what they produce
##
## lately I have tacked on an experimental jack backend for an alternative
## remote SDR radio implemented with sdrkit.
##

BUFFER=1024
RATE=96000
DEV=hw:1			# 1 for sdr-widget
SHARE="--share"
SI570="--si570"
TSTAMP=`date --rfc-3339=date`
for f in $*; do
    case $f in
	--48k) RATE=48000;;
	--96k) RATE=96000;;
	--192k) RATE=192000;;
	--share) SHARE=--share;;
	--hw:0) DEV=hw:0;;
	--hw:1) DEV=hw:1;;
	--hw:2) DEV=hw:2;;
	--hw:3) DEV=hw:3;;
	--si570) SI570=--si570;;
	*)
	    echo "unknown argument: $f"
	    exit 1
	    ;;
    esac
done

jackd -T -s -dalsa -C$DEV -P$DEV -r$RATE -p$BUFFER -n3 > ~/Sources/keyer/logs/$TSTAMP-jackd.log 2>&1 &
sleep 1
nohup softrock --jack $SI570 --iq --samplerate $RATE > ~/Sources/keyer/logs/$TSTAMP-softrock.log 2>&1 &
sleep 1
nohup dspserver --lo 10000 $SHARE > ~/Sources/keyer/logs/$TSTAMP-dspserver.log 2>&1 &

##
## tagged on start jack network backend
## audio adapter to alsa loopback ports
## the loopback ports are started by adding
## snd-aloop to /etc/modules, it will be
## started at boot time as long as its there
##
sleep 1
jack_load audioadapter -i "-D -Chw:2,0 -Phw:2,1"
##
## audio server from loopback ports
## there is a downsampling step here
##
sleep 1
jackd -n af -d alsa -r 8000 -D -Chw:2,1 -Phw:2,0 -i 2 -o 2 > ~/Sources/keyer/logs/$TSTAMP-af.log 2>&1 &
##
## audio server netmanager backend
## so the downsampled stream can
## be remotely accessed.  Only mono
## over a WiFi with jack-1.9.7, but
## the celt codec becomes available
## with jack-1.9.8
## 
sleep 1
jack_load -s af netmanager
