#!/usr/bin/tclsh8.6
# -*- mode: Tcl; tab-width: 8; -*-
#
# Copyright (C) 2013 by Roger E Critchlow Jr, Santa Fe, NM, USA.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
# 

# 

set script [expr { ! [catch {file readlink [info script]} link] ? $link : [info script]}]
lappend auto_path [file join [file dirname $script] .. lib]

package require Tk

package require dbus-sdr

package require sdrtk::vtext
package require sdrkit::startup-usb
package require sdrkit::startup-alsa
package require sdrkit::startup-jack

#
# present an option menu
#
proc option-menu {w options defopt} {
    upvar #0 $w data
    set data(options) $options
    set data(selected) $defopt
    ttk::menubutton $w -textvar ${w}(selected) -menu $w.m
    menu $w.m -tearoff no
    foreach option $options {
	$w.m add radiobutton -label $option -value $option -variable ${w}(selected)
    }
    return $w
}
proc option-menu-selected {w} {
    upvar #0 $w data
    return $data(selected)
}

proc log {msg} {
    # puts "[clock format [clock seconds]] $msg"
    .t.l insert end "[clock format [clock seconds]] $msg\n"
}

proc log-cmds args {
    foreach cmd $args {
	log "$cmd -> [{*}$cmd]"
    }
}

proc mainline {} {
    pack [ttk::notebook .t] -side top -fill both -expand true
    set ::data(usb) [sdrkit::startup-usb ::myusb]
    set ::data(alsa) [sdrkit::startup-alsa ::myalsa]
    set ::data(jack) [sdrkit::startup-jack ::myjack -alsa $::data(alsa) -onchange jackchanged]
    .t add [$::data(jack) panel .t.j -onchange jackchanged] -text jack
    .t add [$::data(alsa) panel .t.a] -text alsa
    .t add [$::data(usb) panel .t.u] -text usb
    .t add [sdrtk::vtext .t.l -scrollbar right -width 20] -text log
    pack [ttk::frame .m] -side bottom
}

mainline   
after 100 [list dbus-sdr::join-request]

