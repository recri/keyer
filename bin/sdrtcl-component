#!/usr/bin/tclsh8.6
# -*- mode: Tcl; tab-width: 8; -*-
#
# Copyright (C) 2011, 2012 by Roger E Critchlow Jr, Santa Fe, NM, USA.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
# 

#
# start an sdrtcl component by name
# 
set script [info script]

#
# append the ../lib directory to the Tcl search path
#
lappend auto_path [file join [file dirname $script] .. lib]

#
# find the name of the script, without reading links
#
set name [file tail $script]

#
# start the component named
#
set component [string range $name 7 end]

package require dbus
package require dbif
package require sdrtcl::$component

# puts "sdrtcl-component runs: sdrtcl::$component $argv"
set command [lindex $argv 0]
set args [lrange $argv 1 end]
sdrtcl::$component $command {*}$args
$command activate

## connect to dbus
dbus connect
dbus name -replace -yield org.sdrkit.$command

## signal reply to rollcall
puts "$component $command Present"
set ::sig [dbif signal / Present {name}]

## set up properties
proc do-configure {oname value} {
    $::command configure $oname $value
}

foreach oname [$::command info options] {
    if {$oname in {-client -server -verbose}} continue
    set pname [string totitle [join [split $oname -] {}]]
    if {[catch {$::command cget $oname} value]} {
	puts "when cgetting $oname got $value"
	continue
    }
    set ::pnameof($oname) $pname
    set ::onameof($pname) $oname
    set ::data($pname) $value
    #puts "$::command defines $pname property for $oname"
    dbif property / $pname ::data($pname) [list do-configure $oname \[set $pname]]
}

## listen for the roll call signal
dbus listen / org.sdrkit.Bus.RollCall {
    # puts "$::command received roll call signal"
    dbus signal / org.sdrkit.Bus Present $::command
}

vwait finished
