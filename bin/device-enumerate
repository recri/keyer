#!/usr/bin/tclsh
# -*- mode: Tcl; tab-width: 8; -*-
#
# Copyright (C) 2011, 2012 by Roger E Critchlow Jr, Santa Fe, NM, USA.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
# 

#
# a generic script for starting sdrkit components by linking their
# name to this script.
# 
set script [info script]

#
# append the ../lib directory to the Tcl search path
#
lappend auto_path [file join [file dirname $script] .. lib]

#
# find the name of the script, without reading links
#
set name [file tail $script]

#
# enumerate usb devices
#
package require usb 1.0

proc usb-refresh {} {
    set devs {}
    usb::init
    foreach d [usb::get_device_list] {
	set desc [usb::get_device_descriptor $d]
	lappend desc bus_number [usb::get_bus_number $d] device_address [usb::get_device_address $d]
	if {[catch {
	    set h [usb::open $d]
	    lappend desc opened true
	    usb::close $h
	} error]} {
	    # cannot open, probably lack permission and need udev.d rule for device
	    lappend desc opened false
	}
	lappend devs $desc
    }
    usb::exit
    return $devs
}

#
# enumerate alsa devices
#
package require alsa::device
package require alsa::pcm

proc alsa-refresh {} {
    set devs {}
    foreach {c sname lname} [alsa::device cards] {
	set dev [list card $c name $sname longname $lname devs [alsa::device devices $c]]
	lappend devs $dev
    }
    #foreach x [alsa::pcm list] { lappend devs [list pcm $x] }
    return $devs
}

#
#
#
proc refresh {} {
    puts [join [concat [usb-refresh] [alsa-refresh]] \n]
}

refresh

