#!/usr/bin/tclsh
# -*- mode: Tcl; tab-width: 8; -*-
#
# Copyright (C) 2011, 2012 by Roger E Critchlow Jr, Santa Fe, NM, USA.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
# 

set script [expr { ! [catch {file readlink [info script]} link] ? $link : [info script]}]
lappend auto_path [file join [file dirname $script] .. lib]

package require Tk

package require sdrtk::graph

#
# plot some trigonometric functions
#

proc main {argv} {
    foreach {option value} $argv {
	switch -- $option {
	    -extremes { set ::data(-extremes) $value }
	    default { error "unknown option \"$option\"" }
	}
    }
    grid [ttk::frame .t] -row 0
    # cos(phi)
    grid [sdrtk::graph .c] -row 1 -sticky nsew
    # cos(phi)^2 - sin(phi)^2
    grid [sdrtk::graph .d] -row 2 -sticky nsew
    # 2 cos(phi) sin(phe
    grid [sdrtk::graph .e] -row 3 -sticky nsew
    grid rowconfigure . 1 -weight 1
    grid rowconfigure . 2 -weight 1
    grid rowconfigure . 3 -weight 1
    grid columnconfigure . 0 -weight 1

    set pi [tcl::mathfunc::atan2 0 -1]
    for {set t 0} {$t < 1024} {incr t} {
	set phi [expr {double($t)*$pi/128}]
	set cosphi [expr {cos($phi)}]
	set sinphi [expr {sin($phi)}]
	lappend cxy $phi $cosphi
	lappend sxy $phi $sinphi
	lappend dxy $phi [expr {$cosphi**2 - $sinphi**2}]
	lappend exy $phi [expr {2 * $cosphi * $sinphi}]
    }
    .c add line cos {*}$cxy
    .c add line sin {*}$sxy
    .d add line pts {*}$dxy
    .e add line pts {*}$exy
}
    
main $argv
