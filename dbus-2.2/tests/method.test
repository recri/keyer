if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest 2
    namespace import -force ::tcltest::*
}

package require dbus-tcl
dbus connect

test method-1.1 {simple method} -body {
    catch {dbus method / foo dummy} rc
} -cleanup {
    catch {dbus method / foo {}} result
} -result 0

test method-1.2 {query all handlers} -setup {
    dbus method / foo dummy
    dbus method /foo bar dummy2
    dbus method "" baz dummy3
    dbus unknown "" dummy4
    dbus unknown / dummy5
    dbus unknown /foo dummy6
} -body {
    dbus method
} -cleanup {
    dbus method / foo {}
    dbus method /foo bar {}
} -result [list "" baz dummy3 / foo dummy /foo bar dummy2]

test method-1.3 {query handlers for a path} -setup {
    dbus method / foo dummy
    dbus method /foo bar dummy2
    dbus unknown "" dummy3
    dbus unknown / dummy4
    dbus unknown /foo dummy5
} -body {
    dbus method /
} -cleanup {
    dbus method / foo {}
    dbus method /foo bar {}
} -result [list / foo dummy]

test method-1.4 {query handler for a method} -setup {
    dbus method / foo dummy
    dbus method /foo bar dummy2
    dbus unknown "" dummy3
    dbus unknown / dummy4
    dbus unknown /foo dummy5
} -body {
    dbus method / foo
} -cleanup {
    dbus method / foo {}
    dbus method /foo bar {}
} -result dummy

test method-1.5 {query handler with -async option} -setup {
    dbus method / foo dummy
} -body {
    dbus method -async /
} -cleanup {
    dbus method / foo {}
} -returnCodes 1 -result {The -async option is not applicable for\
  querying method handlers}

test method-1.6 {unregistering handler} -body {
    dbus method / foo {}
} -result {}

test method-1.7 {unregistering handler with -async option} -body {
    dbus method -async / foo {}
} -returnCodes error -result {The -async option is not\
  applicable for unregistering method handlers}

test method-1.8 {method handler for invalid path} -body {
    dbus method /test/ foo dummy
} -returnCodes error -result {Invalid path}

# cleanup
cleanupTests
return
