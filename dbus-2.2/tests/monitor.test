if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest 2
    namespace import -force ::tcltest::*
}

package require dbus-tcl
dbus connect

proc handler {data args} {
    if {[dict get $data sender] ne [dbus info service]} {
	set ::result [dict get $data messagetype],[dict get $data member]
    }
}

test monitor-1.1 {define monitor command} -body {
    catch {dbus monitor dummy} rc
} -cleanup {
    catch {dbus monitor ""} result
} -result 0

test monitor-1.2 {remove monitor command} -setup {
    catch {dbus monitor dummy} rc
} -body {
    catch {dbus monitor ""} result
} -result 0

test monitor-1.3 {monitor command call} -setup {
    dbus filter add -interface com.tclcode.test
    dbus monitor handler
} -body {
    dbus call -dest com.tclcode.test.responder -timeout -1 \
      /test com.tclcode.test signal
    after 200 {set result timeout}
    vwait result
    return $result
} -result signal,testsignal

# cleanup
cleanupTests
return
