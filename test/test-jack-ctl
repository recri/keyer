#!/usr/bin/tclsh
# -*- mode: Tcl; tab-width: 8; -*-
#
# Copyright (C) 2011, 2012 by Roger E Critchlow Jr, Santa Fe, NM, USA.
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
# 

set libdir [file normalize [file join [file dirname [info script]] .. lib sdrtcl]]
set so [info sharedlibextension]

load [file join $libdir jack_ctl$so]

proc print-parameter {p whose} {
    set pname [sdrtcl::jack-ctl parameter-get-name $p]
    set sdesc [sdrtcl::jack-ctl parameter-get-short-description $p]
    set ldesc [sdrtcl::jack-ctl parameter-get-long-description $p]
    set ptype [sdrtcl::jack-ctl parameter-get-type $p]
    set pid [sdrtcl::jack-ctl parameter-get-id $p]
    set pset [sdrtcl::jack-ctl parameter-is-set $p]
    set pval [sdrtcl::jack-ctl parameter-get-value $p]
    set pdef [sdrtcl::jack-ctl parameter-get-default-value $p]
    if {[sdrtcl::jack-ctl parameter-has-range-constraint $p]} {
    } elseif {[sdrtcl::jack-ctl parameter-has-enum-constraint $p]} {
    }
    if {$sdesc ne $ldesc} {
	set desc "\n\t$sdesc\n\t$ldesc"
    } else {
	set desc "\n\t$sdesc"
    }
    puts "$whose: $pname $ptype $pid $pset $pval $pdef $desc"
}

set s [sdrtcl::jack-ctl create]

foreach p [sdrtcl::jack-ctl get-parameters $s] {
    print-parameter $p {server}
}
foreach d [sdrtcl::jack-ctl get-drivers $s] {
    set name [sdrtcl::jack-ctl driver-get-name $d]
    set type {}
    if {0} { set type [sdrtcl::jack-ctl driver-get-type $d] }
    puts "driver $name $type"
    foreach p [sdrtcl::jack-ctl driver-get-parameters $d] {
	print-parameter $p "driver $name"
    }
}

foreach i [sdrtcl::jack-ctl get-internals $s] {
    set name [sdrtcl::jack-ctl internal-get-name $i]
    puts "internal $name"
    foreach p [sdrtcl::jack-ctl internal-get-parameters $i] {
	print-parameter $p "internal $name"
    }
}
